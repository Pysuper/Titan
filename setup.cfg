;这个配置文件集成了多个代码质量和类型检查工具，确保在开发过程中保持代码的高质量和一致性：
;Flake8 和 Pycodestyle 用于检测代码风格问题。
;Isort 自动排序导入语句，确保导入的整齐和规范。
;Mypy 进行静态类型检查，帮助发现潜在的类型错误。
;Coverage 用于检测测试覆盖率，确保代码的测试充分。
;通过配置这些工具，开发团队可以提高代码的可维护性，减少潜在的错误，并确保符合项目的编码规范

[flake8]  # Flake8 配置部分
max-line-length = 120  # 设置最大行长度为 120 个字符
exclude = .tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,venv  # 排除特定目录和文件

[pycodestyle]  # Pycodestyle 配置部分（与 Flake8 重复）
max-line-length = 120  # 设置最大行长度为 120 个字符
exclude = .tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,venv  # 排除特定目录和文件

[isort]  # Isort 配置部分，用于排序导入语句
line_length = 88  # 设置每行最大字符数为 88
known_first_party = backend,config  # 指定为第一方的模块
multi_line_output = 3  # 多行输出格式
default_section = THIRDPARTY  # 默认部分为第三方库
skip = venv/  # 跳过虚拟环境目录
skip_glob = **/migrations/*.py  # 跳过所有迁移文件
include_trailing_comma = true  # 在多行导入中包括尾随逗号
force_grid_wrap = 0  # 不强制换行
use_parentheses = true  # 使用括号包裹导入

[mypy]  # Mypy 配置部分，用于类型检查
python_version = 3.9  # 指定 Python 版本
check_untyped_defs = True  # 检查未类型注释的定义
ignore_missing_imports = True  # 忽略缺失的导入错误
warn_unused_ignores = True  # 警告未使用的 ignore 注释
warn_redundant_casts = True  # 警告冗余的类型转换
warn_unused_configs = True  # 警告未使用的配置
plugins = mypy_django_plugin.main, mypy_drf_plugin.main  # 使用 Django 和 DRF 的插件

[mypy.plugins.django-stubs]  # Django 插件的配置
django_settings_module = config.settings.test  # 指定 Django 设置模块

[mypy-*.migrations.*]  # 针对 Django 迁移文件的配置
# Django 迁移不应产生任何错误：
ignore_errors = True  # 忽略迁移文件的错误

[coverage:run]  # 代码覆盖率配置部分
include = backend/*  # 包括后端目录中的所有文件
omit = *migrations*, *tests*  # 排除迁移和测试文件
plugins = django_coverage_plugin  # 使用 Django 覆盖插件
